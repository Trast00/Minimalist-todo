"use strict";(self.webpackChunkminimalist_todo=self.webpackChunkminimalist_todo||[]).push([[179],{426:(n,r,t)=>{t.d(r,{Z:()=>A});var e=t(537),o=t.n(e),a=t(645),i=t.n(a)()(o());i.push([n.id,'* {\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #f6f6f6;\r\n  font-family: "Inter var", sans-serif;\r\n}\r\n\r\nmain {\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  max-width: 500px;\r\n  min-height: 220px;\r\n  margin: 8px;\r\n  border-radius: 4px;\r\n  box-shadow: 0 6px 8px rgba(0, 0, 0, 0.2);\r\n  background-color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n\r\n/* Title */\r\n\r\n.title {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 16px;\r\n}\r\n\r\nh1 {\r\n  font-weight: 500;\r\n  font-size: 1.3rem;\r\n}\r\n\r\ni {\r\n  color: #c1c1c1;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Form and Input : List of task */\r\n.addtask {\r\n  width: 100%;\r\n  border: none;\r\n  padding: 16px;\r\n  font-size: 1.125rem;\r\n  border-top: 1px solid rgba(193, 193, 193, 0.4);\r\n}\r\n\r\n.addtask:focus {\r\n  outline: none;\r\n}\r\n\r\n#list-task {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n\r\n.task {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-content: center;\r\n  padding: 16px;\r\n  border-top: 1px solid rgba(193, 193, 193, 0.4);\r\n  background-color: white;\r\n}\r\n\r\n.task .task-content {\r\n  width: 90%;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.task .task-content input[type="checkbox"] {\r\n  width: 15px;\r\n  height: 15px;\r\n  margin-right: 12px;\r\n}\r\n\r\n.task .task-content .task-description {\r\n  width: 100%;\r\n  border: none;\r\n  font-size: 1.125rem;\r\n  background: none;\r\n}\r\n\r\n.task .task-content .task-description:focus {\r\n  outline: none;\r\n}\r\n\r\n#btn-clear-task {\r\n  width: 100%;\r\n  height: 60px;\r\n  font-weight: 500;\r\n  color: rgb(153, 152, 152);\r\n  cursor: pointer;\r\n  background-color: #f6f6f6;\r\n  border-top: 1px solid rgba(193, 193, 193, 0.4);\r\n  border-bottom: none;\r\n  border-left: none;\r\n  border-right: none;\r\n  bottom: 0;\r\n  position: relative;\r\n}\r\n',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;AACxB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,aAAa;EACb,yBAAyB;EACzB,oCAAoC;AACtC;;AAEA;EACE,sBAAsB;EACtB,WAAW;EACX,gBAAgB;EAChB,iBAAiB;EACjB,WAAW;EACX,kBAAkB;EAClB,wCAAwC;EACxC,uBAAuB;EACvB,aAAa;EACb,sBAAsB;EACtB,8BAA8B;AAChC;;AAEA,UAAU;;AAEV;EACE,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,aAAa;AACf;;AAEA;EACE,gBAAgB;EAChB,iBAAiB;AACnB;;AAEA;EACE,cAAc;EACd,eAAe;AACjB;;AAEA,kCAAkC;AAClC;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,mBAAmB;EACnB,8CAA8C;AAChD;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,uBAAuB;AACzB;;AAEA;EACE,aAAa;EACb,8BAA8B;EAC9B,qBAAqB;EACrB,aAAa;EACb,8CAA8C;EAC9C,uBAAuB;AACzB;;AAEA;EACE,UAAU;EACV,aAAa;EACb,mBAAmB;AACrB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,aAAa;AACf;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,gBAAgB;EAChB,yBAAyB;EACzB,eAAe;EACf,yBAAyB;EACzB,8CAA8C;EAC9C,mBAAmB;EACnB,iBAAiB;EACjB,kBAAkB;EAClB,SAAS;EACT,kBAAkB;AACpB",sourcesContent:['* {\r\n  padding: 0;\r\n  margin: 0;\r\n  box-sizing: border-box;\r\n}\r\n\r\nbody {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 100vh;\r\n  background-color: #f6f6f6;\r\n  font-family: "Inter var", sans-serif;\r\n}\r\n\r\nmain {\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n  max-width: 500px;\r\n  min-height: 220px;\r\n  margin: 8px;\r\n  border-radius: 4px;\r\n  box-shadow: 0 6px 8px rgba(0, 0, 0, 0.2);\r\n  background-color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n\r\n/* Title */\r\n\r\n.title {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 16px;\r\n}\r\n\r\nh1 {\r\n  font-weight: 500;\r\n  font-size: 1.3rem;\r\n}\r\n\r\ni {\r\n  color: #c1c1c1;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Form and Input : List of task */\r\n.addtask {\r\n  width: 100%;\r\n  border: none;\r\n  padding: 16px;\r\n  font-size: 1.125rem;\r\n  border-top: 1px solid rgba(193, 193, 193, 0.4);\r\n}\r\n\r\n.addtask:focus {\r\n  outline: none;\r\n}\r\n\r\n#list-task {\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n}\r\n\r\n.task {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-content: center;\r\n  padding: 16px;\r\n  border-top: 1px solid rgba(193, 193, 193, 0.4);\r\n  background-color: white;\r\n}\r\n\r\n.task .task-content {\r\n  width: 90%;\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.task .task-content input[type="checkbox"] {\r\n  width: 15px;\r\n  height: 15px;\r\n  margin-right: 12px;\r\n}\r\n\r\n.task .task-content .task-description {\r\n  width: 100%;\r\n  border: none;\r\n  font-size: 1.125rem;\r\n  background: none;\r\n}\r\n\r\n.task .task-content .task-description:focus {\r\n  outline: none;\r\n}\r\n\r\n#btn-clear-task {\r\n  width: 100%;\r\n  height: 60px;\r\n  font-weight: 500;\r\n  color: rgb(153, 152, 152);\r\n  cursor: pointer;\r\n  background-color: #f6f6f6;\r\n  border-top: 1px solid rgba(193, 193, 193, 0.4);\r\n  border-bottom: none;\r\n  border-left: none;\r\n  border-right: none;\r\n  bottom: 0;\r\n  position: relative;\r\n}\r\n'],sourceRoot:""}]);const A=i},645:n=>{n.exports=function(n){var r=[];return r.toString=function(){return this.map((function(r){var t="",e=void 0!==r[5];return r[4]&&(t+="@supports (".concat(r[4],") {")),r[2]&&(t+="@media ".concat(r[2]," {")),e&&(t+="@layer".concat(r[5].length>0?" ".concat(r[5]):""," {")),t+=n(r),e&&(t+="}"),r[2]&&(t+="}"),r[4]&&(t+="}"),t})).join("")},r.i=function(n,t,e,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(e)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var d=[].concat(n[c]);e&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),r.push(d))}},r}},537:n=>{n.exports=function(n){var r=n[1],t=n[3];if(!t)return r;if("function"==typeof btoa){var e=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(e),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[r].concat(i).concat([a]).join("\n")}return[r].join("\n")}},379:n=>{var r=[];function t(n){for(var t=-1,e=0;e<r.length;e++)if(r[e].identifier===n){t=e;break}return t}function e(n,e){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],c=e.base?s[0]+e.base:s[0],d=a[c]||0,p="".concat(c," ").concat(d);a[c]=d+1;var l=t(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==l)r[l].references++,r[l].updater(u);else{var f=o(u,e);e.byIndex=A,r.splice(A,0,{identifier:p,updater:f,references:1})}i.push(p)}return i}function o(n,r){var t=r.domAPI(r);return t.update(n),function(r){if(r){if(r.css===n.css&&r.media===n.media&&r.sourceMap===n.sourceMap&&r.supports===n.supports&&r.layer===n.layer)return;t.update(n=r)}else t.remove()}}n.exports=function(n,o){var a=e(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);r[A].references--}for(var s=e(n,o),c=0;c<a.length;c++){var d=t(a[c]);0===r[d].references&&(r[d].updater(),r.splice(d,1))}a=s}}},569:n=>{var r={};n.exports=function(n,t){var e=function(n){if(void 0===r[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}r[n]=t}return r[n]}(n);if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(t)}},216:n=>{n.exports=function(n){var r=document.createElement("style");return n.setAttributes(r,n.attributes),n.insert(r,n.options),r}},565:(n,r,t)=>{n.exports=function(n){var r=t.nc;r&&n.setAttribute("nonce",r)}},380:n=>{n.exports=function(n){var r=n.insertStyleElement(n);return{update:function(t){!function(n,r,t){var e="";t.supports&&(e+="@supports (".concat(t.supports,") {")),t.media&&(e+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(e+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),e+=t.css,o&&(e+="}"),t.media&&(e+="}"),t.supports&&(e+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(e+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),r.styleTagTransform(e,n,r.options)}(r,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(r)}}}},589:n=>{n.exports=function(n,r){if(r.styleSheet)r.styleSheet.cssText=n;else{for(;r.firstChild;)r.removeChild(r.firstChild);r.appendChild(document.createTextNode(n))}}},795:(n,r,t)=>{var e=t(379),o=t.n(e),a=t(380),i=t.n(a),A=t(569),s=t.n(A),c=t(565),d=t.n(c),p=t(216),l=t.n(p),u=t(589),f=t.n(u),C=t(426),E={};E.styleTagTransform=f(),E.setAttributes=d(),E.insert=s().bind(null,"head"),E.domAPI=i(),E.insertStyleElement=l(),o()(C.Z,E),C.Z&&C.Z.locals&&C.Z.locals;class m{constructor(n,r,t=!1){this.index=n,this.description=r,this.completed=t}}[new m(1,"Task 1",!1),new m(2,"Task 2",!1),new m(3,"Task 3",!1),new m(4,"Task 4",!1),new m(5,"Task 5",!1)].forEach((n=>{const r=document.getElementById("list-task"),t=document.createElement("li");t.classList.add("task");const e=document.createElement("div");e.classList.add("task-content");const o=document.createElement("input");o.type="checkbox";const a=document.createElement("input");a.classList.add("task-description"),a.value=n.description,a.type="text",e.append(o),e.append(a);const i=document.createElement("i");i.classList.add("fa-solid","fa-ellipsis-vertical"),t.append(e),t.append(i),r.append(t)}))}},n=>{n(n.s=795)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,